# description of this workflow, can be anything you want
name: CraftPresence - WoW Edition Release

# we need to let GitHub know _when_ we want to release, typically only when we create a new tag.
# this will target only tags, and not all pushes to the master branch.
# this part can be heavily customized to your liking, like targeting only tags that match a certain word,
# other branches or even pull requests.
on:
  push:
    tags:
      - '**'

# a workflow is built up as jobs, and within these jobs are steps
jobs:

  # "release" is a job, you can name it anything you want
  release:

    # we can run our steps on pretty much anything, but the "ubuntu-latest" image is a safe bet
    runs-on: ubuntu-latest

    # specify the environment variables used by the packager, matching the secrets from the project on GitHub
    env:
      CF_API_KEY: ${{ secrets.CF_API_KEY }}
      WOWI_API_TOKEN: ${{ secrets.WOWI_API_TOKEN }}
      WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}
      GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}  # "GITHUB_TOKEN" is a secret always provided to the workflow
                                                 # for your own token, the name cannot start with "GITHUB_"

    # "steps" holds a list of all the steps needed to package and release our AddOn
    steps:

      # we first have to clone the AddOn project, this is a required step
      - name: Clone project
        uses: actions/checkout@v4
        with:
          # you can specify how much of the commit history you want to fetch,
          # which is useful for controlling the length of the automated changelog
          fetch-depth: 0
          submodules: "recursive"

      # run a luacheck analysis before proceeding with release
      - name: Install and run Luacheck
        uses: nebularg/actions-luacheck@v1
        with:
          args: "--no-color -q"
          annotate: warning

      # Release - Retail
      - name: Package and release for Retail
        uses: BigWigsMods/packager@master
        with:
          args: -g retail

      # Release - Vanilla Classic
      - name: Package and release for Classic
        uses: BigWigsMods/packager@master
        with:
          args: -g classic

      # Release - Wrath Classic
      - name: Package and release for Wrath Classic
        uses: BigWigsMods/packager@master
        with:
          args: -g wrath

      # Release - Cataclysm Classic
      - name: Package and release for Cataclysm Classic
        uses: BigWigsMods/packager@master
        with:
          args: -g cata